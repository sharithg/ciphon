// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package repository

import (
	"time"

	"github.com/google/uuid"
	auth "github.com/sharithg/siphon/internal/auth"
)

type CommandOutput struct {
	ID        uuid.UUID `json:"id"`
	StepID    uuid.UUID `json:"stepId"`
	Stdout    string    `json:"stdout"`
	Type      string    `json:"type"`
	StepOrder *int32    `json:"stepOrder"`
	CreatedAt time.Time `json:"createdAt"`
}

type GithubRepo struct {
	ID            uuid.UUID `json:"id"`
	RepoID        int64     `json:"repoId"`
	Name          string    `json:"name"`
	Owner         string    `json:"owner"`
	Description   *string   `json:"description"`
	Url           string    `json:"url"`
	RepoCreatedAt time.Time `json:"repoCreatedAt"`
	RawData       []byte    `json:"rawData"`
	CreatedAt     time.Time `json:"createdAt"`
	UpdatedAt     time.Time `json:"updatedAt"`
}

type GithubUserInfo struct {
	UserID    uuid.UUID       `json:"userId"`
	Data      auth.GitHubUser `json:"data"`
	CreatedAt time.Time       `json:"createdAt"`
	UpdatedAt time.Time       `json:"updatedAt"`
}

type JobRun struct {
	ID         uuid.UUID   `json:"id"`
	WorkflowID uuid.UUID   `json:"workflowId"`
	Name       string      `json:"name"`
	Status     *string     `json:"status"`
	Docker     string      `json:"docker"`
	Node       *string     `json:"node"`
	CreatedAt  time.Time   `json:"createdAt"`
	UpdatedAt  time.Time   `json:"updatedAt"`
	Requires   []uuid.UUID `json:"requires"`
}

type Node struct {
	ID         uuid.UUID `json:"id"`
	Host       string    `json:"host"`
	Port       int32     `json:"port"`
	Name       string    `json:"name"`
	Username   string    `json:"username"`
	PemFile    string    `json:"pemFile"`
	Status     string    `json:"status"`
	AgentToken string    `json:"agentToken"`
	CreatedAt  time.Time `json:"createdAt"`
	UpdatedAt  time.Time `json:"updatedAt"`
}

type PipelineRun struct {
	ID         uuid.UUID `json:"id"`
	CommitSha  string    `json:"commitSha"`
	ConfigFile string    `json:"configFile"`
	RepoID     int64     `json:"repoId"`
	Status     string    `json:"status"`
	Branch     string    `json:"branch"`
	CreatedAt  time.Time `json:"createdAt"`
	UpdatedAt  time.Time `json:"updatedAt"`
}

type StepRun struct {
	ID        uuid.UUID `json:"id"`
	JobID     uuid.UUID `json:"jobId"`
	StepOrder int32     `json:"stepOrder"`
	Type      string    `json:"type"`
	Name      *string   `json:"name"`
	Status    *string   `json:"status"`
	Command   *string   `json:"command"`
	Keys      []string  `json:"keys"`
	Paths     []string  `json:"paths"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
}

type User struct {
	ID         uuid.UUID `json:"id"`
	Username   string    `json:"username"`
	Email      string    `json:"email"`
	AuthType   *string   `json:"authType"`
	ExternalID string    `json:"externalId"`
	CreatedAt  time.Time `json:"createdAt"`
	UpdatedAt  time.Time `json:"updatedAt"`
}

type WorkflowRun struct {
	ID            uuid.UUID `json:"id"`
	Name          string    `json:"name"`
	Status        *string   `json:"status"`
	PipelineRunID uuid.UUID `json:"pipelineRunId"`
	Duration      *float64  `json:"duration"`
	CreatedAt     time.Time `json:"createdAt"`
	UpdatedAt     time.Time `json:"updatedAt"`
}
